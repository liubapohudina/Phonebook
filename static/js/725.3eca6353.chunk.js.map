{"version":3,"file":"static/js/725.3eca6353.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/form.module.css?cfaa","redux/contacts/contacts-selector.js","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Form/contactsList.module.css?d795","webpack://react-homework-template/./src/components/PortalModal/Modal/modal.module.css?0c27","components/PortalModal/Modal/Modal.jsx","components/Form/ContacsList.jsx","components/Form/FilterSearch.jsx","Pages/PhonebookList/PhonebookList.jsx","webpack://react-homework-template/./src/components/Form/title.module.css?00f8","components/Form/Title.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"form_input__cqeL6\",\"p\":\"form_p__75oS7\",\"infoForUser\":\"form_infoForUser__zOjDw\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = store => store.contacts.items;\n\n\nconst selectContactsAll = store => store.contacts;\nconst selectFilter = store => store.filter;\n\n\nexport const selectFilterContacts = createSelector(\n  [selectContactsAll, selectFilter],\n    (contacts, filter) => {\n    if (!filter || typeof filter !== 'string') {\n      return contacts;\n    }\n\n    const normalizedFilter = filter.trim().toLowerCase();\n\n    const filteredContacts = contacts.items.filter(({ name }) => {\n      const normalizedName = (name || '').trim().toLowerCase();\n      return normalizedName.includes(normalizedFilter);\n    });\n    \n    return filteredContacts;\n  }\n);\n\n// export const selectFilterContacts = store => {\n//     const { contacts, filter } = store;\n\n//   if (!filter || typeof filter !== 'string') {\n//         return contacts;\n//     }\n\n//     const normalizedFilter = filter.trim().toLowerCase();\n\n//     const filteredContacts = contacts.items.filter(({ name }) => {\n//         const normalizedName = (name || '').trim().toLowerCase();\n//         return normalizedName.includes(normalizedFilter);\n//     });\n//     return filteredContacts;\n// };","import React from \"react\";\nimport Button from \"./Button\";\nimport styles from './form.module.css';\n//import PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { fetchAddContacts } from \"../../redux/contacts/contacts-operations\";\nimport { toast } from \"react-toastify\";\nimport { selectContacts } from \"../../redux/contacts/contacts-selector\";\n\n\n\nconst Form = () => {\n  const contactsAll = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [values, setValues] = useState({});\n\n\n  const onChangeInput = (event) => {\n  const { name, value } = event.target; \n  setValues((prevValues) => ({\n    ...prevValues,\n    [name]: value,\n  }));\n}\n\n\n\n  const onClickSubmit = (event) => {\n    event.preventDefault(); \n    const { name } = values;\n    const isExist = contactsAll.findIndex(el => el.name.toLocaleLowerCase().trim() === name.toLocaleLowerCase().trim());\n\n    if (isExist >= 0) {\n      toast.warning(`Contact ${name} is already exists!`);\n      return;\n    }\n    dispatch(fetchAddContacts(values));\n    if (contactsAll.length > 0) {\n      event.currentTarget.reset()\n    }\n    }\n    \n  \n\n \n    return (\n        <form className={styles.form} onSubmit={onClickSubmit}>\n            <label htmlFor=\"name\">Name</label>\n            <input className={styles.input} onChange={onChangeInput} type=\"text\" name=\"name\" id=\"username\"  required placeholder=\"Please, enter data of contact\" />\n            \n            <label htmlFor=\"tel\">Phone number </label>\n            <input className={styles.input} onChange={onChangeInput} type=\"tel\" name=\"number\" id=\"tel\" required placeholder=\"Please, enter a phone number\"/>\n           \n            <Button type=\"submit\" text=\"Add contact\"  />\n        </form>\n    )\n}\n\nexport default Form;\n\n// Form.propTypes = {\n//     onChangeInput: PropTypes.func,\n//     onClickSubmit: PropTypes.func,\n// }","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contactsList_contactsList__DGG6L\",\"itemContacts\":\"contactsList_itemContacts__PtrNV\",\"contactInfo\":\"contactsList_contactInfo__0aqg3\",\"link\":\"contactsList_link__ZZsC4\",\"btn\":\"contactsList_btn__1i6Qa\",\"btns\":\"contactsList_btns__6FOoP\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"modal_backdrop__1aTRo\",\"modal\":\"modal_modal__+OT1t\",\"btnModalClose\":\"modal_btnModalClose__ZQkiw\",\"icon\":\"modal_icon__5hS-K\",\"input\":\"modal_input__SBHw0\",\"p\":\"modal_p__zA2Iq\",\"infoForUser\":\"modal_infoForUser__quw1g\"};","import styles from './modal.module.css';\nimport Button from '../../../components/Form/Button';\nimport { RxCross2 } from \"react-icons/rx\";\nimport { selectContacts } from '../../../redux/contacts/contacts-selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { fetchEditContact } from '../../../redux/contacts/contacts-operations';\n\nconst Modal = ({ onClose, currentId }) => {\n  const allContacts = useSelector(selectContacts);\n  const selectItem = allContacts.find(item => item.id === currentId);\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n    id: '',\n  });\n\n  useEffect(() => {\n    if (selectItem) {\n      setFormData({\n        name: selectItem.name,\n        number: selectItem.number,\n        id: selectItem.id,\n      });\n    }\n  }, [selectItem]);\n\n  const onChangeInput = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitForm = (e, id) => {\n    const contact = {\n    name: formData.name,\n    number: formData.number\n  };\n    dispatch(fetchEditContact({ id: id, contact: contact }));\n    e.preventDefault();\n    onClose();\n  };\n \nconst handleKeyDown = (e) => {\n    if (e.key === 'Escape') {\n      onClose(); \n    }\n  };\n\n   const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose(); \n    }\n  };\n\n  return (\n    <div className={styles.backdrop} onClick={handleBackdropClick} onKeyDown={handleKeyDown}>\n      <div className={styles.modal}>\n        <form className={styles.form} onSubmit={(e) => onSubmitForm(e, formData.id)}>\n          <label htmlFor=\"name\">Name</label>\n          <input className={styles.input} onChange={onChangeInput} value={formData.name} type=\"text\" name=\"name\" id=\"username\" required />\n        \n          <label htmlFor=\"tel\">Phone number </label>\n          <input className={styles.input} onChange={onChangeInput} value={formData.number} type=\"tel\" name=\"number\" id=\"tel\" required />\n       \n          <Button type=\"submit\" text=\"Edit contact\" />\n        </form>\n        <button className={styles.btnModalClose} onClick={onClose}>\n          <RxCross2 className={styles.icon} />\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default Modal;\n","import React from \"react\";\nimport { createPortal } from 'react-dom';\nimport styles from './contactsList.module.css';\nimport PropTypes from \"prop-types\";\nimport { Loader } from \"./Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilterContacts} from '../../redux/contacts/contacts-selector';\nimport { fetchContacts, fetchDeleteContacts } from \"../../redux/contacts/contacts-operations\";\nimport { useEffect, useState } from \"react\";\nimport Modal from \"../PortalModal/Modal/Modal\";\n\n\n\nconst ContactList = () => {\n  const { items, isLoading } = useSelector(selectFilterContacts);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentId, setCurrentId] = useState(null);\n \n  \n  const filteredContacts = useSelector(selectFilterContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n\n  const onClickDelete = (id) => {\n    dispatch(fetchDeleteContacts(id));\n  }\n\n  const openModal = (id) => {\n    setIsModalOpen(true);\n    setCurrentId(id);\n  }\n\n \nconst elements = items ? (\n    items.map(item => (\n      <li className={styles.itemContacts} key={item.id}>\n        <p className={styles.contactInfo}>{item.name} <a className={styles.link} href={`tel:${item.number}`}>{item.number}</a></p>\n        <div className={styles.btns}>\n          <button id={item.id} className={styles.btn} onClick={() => onClickDelete(item.id)} type=\"button\">Delete</button>\n          <button id={item.id} className={styles.btn} onClick={() => openModal(item.id)} type=\"button\">Edit</button>\n        </div> \n  </li>\n    ))\n) : (\n    filteredContacts.map(item => (\n        <li className={styles.itemContacts} key={item.id}>\n        <p className={styles.contactInfo}>{item.name}  {item.number}</p>\n        <div className={styles.btns}>\n          <button id={item.id} className={styles.btn} onClick={() => onClickDelete(item.id)} type=\"button\">Delete</button>\n          <button id={item.id} className={styles.btn} onClick={() => openModal(item.id)} type=\"button\">Edit</button>\n        </div>  \n        </li>\n    ))\n);\n\n  \n\n  return (\n  <>\n      {isLoading && <Loader />}\n      {isModalOpen && createPortal(\n        <Modal currentId={currentId} onClose={() => setIsModalOpen(false)} />,\n        document.querySelector('#modal-root')\n      )}\n      <div className=\"contactsList\">\n        <ul className={styles.contactsList}>{elements}</ul>\n      </div>\n    </>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.array,\n  onClickDelete: PropTypes.func,\n};\n","import Title from './Title';\nimport styles from './form.module.css';\nimport PropTypes from \"prop-types\";\nimport { addFilter } from '../../redux/filter/filter-slice';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/contacts-selector';\n\nconst Filter = ({children}) => {\n  const items = useSelector(selectContacts);\n  const isItems = items.length;\n\n  const dispatch = useDispatch();\n  const onChangeFilter = (event) => {\n    const filterValue = event.target.value\n    const action = addFilter({filter: filterValue})\n    dispatch(action)\n  }\n\n return (\n  <section>\n    {Boolean(isItems) ? (\n      <div className=\"filter\">\n        <Title title='Contacts' />\n         <p className={styles.p}>Find contacts by name</p>\n         <form>\n           <input onChange={onChangeFilter} className={styles.input} name=\"filter\" type=\"text\" placeholder='Enter name'/>\n           </form>\n      </div>\n    ) : (\n      <p className={styles.infoForUser}>You don't have any contacts yet.</p>\n     )}\n     {children}\n  </section>\n);\n\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n    onChangeInput: PropTypes.func,\n}","import Form from '../../components/Form/Form';\nimport Title from \"../../components/Form/Title\";\n\nimport ContactList from \"../../components/Form/ContacsList\";\nimport Filter from \"../../components/Form/FilterSearch\";\n\n\nconst PhonebookList = () => {\n  \n  return (\n          <main className='container'>\n     <Title title=\"Phonebook\">\n        <Form />\n      </Title> \n      <Filter>\n        <ContactList />\n      </Filter>  \n    </main>\n    )\n\n}\n\nexport default PhonebookList;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__3H47j\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from './title.module.css';\n\n\n\nconst Title = ({title, children}) => {\n    return (\n        <section>\n        <h2 className={styles.title}>{title}</h2>\n        {children}\n        </section>     \n    )\n}\n\nexport default Title;\n\nTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n}"],"names":["selectContacts","store","contacts","items","selectFilterContacts","createSelector","filter","normalizedFilter","trim","toLowerCase","_ref","name","includes","contactsAll","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","values","setValues","onChangeInput","event","_event$target","target","value","prevValues","_objectSpread","_defineProperty","_jsxs","className","styles","onSubmit","preventDefault","findIndex","el","toLocaleLowerCase","toast","concat","fetchAddContacts","length","currentTarget","reset","children","_jsx","htmlFor","onChange","type","id","required","placeholder","Button","text","onClose","currentId","selectItem","find","item","number","formData","setFormData","useEffect","e","onClick","onKeyDown","key","contact","fetchEditContact","onSubmitForm","RxCross2","_useSelector","isLoading","isModalOpen","setIsModalOpen","_useState3","_useState4","setCurrentId","filteredContacts","fetchContacts","onClickDelete","fetchDeleteContacts","openModal","elements","map","href","_Fragment","Loader","createPortal","Modal","document","querySelector","isItems","Boolean","Title","title","filterValue","action","addFilter","Form","Filter","ContactList"],"sourceRoot":""}